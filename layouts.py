import pandas as pd
from dash import dcc, html
import dash_bootstrap_components as dbc
import settings as st


df = pd.read_csv('data/us_data.csv')
df_us = df[['age_patient',
            'diagnosis_primary',
            'side',
            'satus_reproductive',
            'complaints',
            'breast_surgery_before', 
            'skin_symptoms',
            'nipple_retraction', 
            'nipple_release',
            'quadrant', 
            'genetics',
            'hormonal_medications',
            'hist_is_tumor']]
df_us_jn = df_us[df_us['age_patient'] < 40]
df_us1 = df[['age_patient',
            'diagnosis_primary',
            'side',
            'satus_reproductive',
            'complaints',
            'breast_surgery_before', 
            'skin_symptoms',
            'nipple_retraction', 
            'nipple_release',
            'quadrant', 
            'genetics',
            'hormonal_medications',
            'mmg_conclusion_skin',
            'mmg_areola',
            'mmg_nipple',
            'mmg_background_breast',
            'mmg_nodle',
            'mmg_nodle_contour',
            'mmg_nodle_size',
            'mmg_calcifications',
            'mmg_number_formations_visualized',
            'mmg_axillary_lymph_nodes',
            'mmg_conclusion',
            'type_structure_acr',
            'mmg_number_nodles',
            'mmg_category_birads',
            'hist_is_tumor']]
df_us_snr = df_us1[df_us1['age_patient'] >= 40]


def create_layout():
    return dbc.Container([  

        html.H1("Анализ скрининга рака молочноый железы", className="h1-label"),
        dcc.Markdown(st.EXPLAINER, className="explainer"),
        html.H2("Показатели для выбора:", className="h2-label"),
        dbc.Col([
            dbc.Button(
            "Данные анамнеза",
            id="collapse-button-anamnesis",
            className="mb-3",
            color="secodary",
            n_clicks=0,
        ),
            dbc.Collapse(
                dbc.Card([
                    html.H2("Данные анамнеза", className="h2-label"),
                    dbc.Col([html.Label("Первичный диагноз", className="filter-label"), 
                        dcc.Dropdown(id="diagnosis_primary-filter",
                                  options=[{'label': dp, 'value': dp } for dp in df['diagnosis_primary'].unique()],
                                  value=df['diagnosis_primary'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=12),
                    dbc.Col([html.Label("Репродуктивный статус", className="filter-label"), 
                        dcc.Dropdown(id="satus_reproductive-filter",
                                  options=[{'label': sr, 'value': sr } for sr in df['satus_reproductive'].unique()],
                                  value=df['satus_reproductive'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=12),
                    dbc.Row([dbc.Col([html.Label("Группа", className="filter-label"), 
                        dcc.Dropdown(id="group-filter",
                                  options=[{'label': g, 'value': g } for g in df['group_separation'].unique()],
                                  value=df['group_separation'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),
                    dbc.Col([html.Label("Жалобы", className="filter-label"), 
                        dcc.Dropdown(id="complaints-filter",
                                  options=[{'label': cmpl, 'value': cmpl } for cmpl in df['complaints'].unique()],
                                  value=df['complaints'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),
                    dbc.Col([html.Label("Симптомы на коже", className="filter-label"), 
                        dcc.Dropdown(id="skin_symptoms-filter",
                                  options=[{'label': sks, 'value': sks } for sks in df['skin_symptoms'].unique()],
                                  value=df['skin_symptoms'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),

                                  ]),
                    dbc.Row([
                        dbc.Col([html.Label("Операции ранее", className="filter-label"), 
                        dcc.Dropdown(id="breast_surgery_before-filter",
                                  options=[{'label': bsb, 'value': bsb } for bsb in df['breast_surgery_before'].unique()],
                                  value=df['breast_surgery_before'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),
                    
                    dbc.Col([html.Label("Симптом ретракции", className="filter-label"), 
                        dcc.Dropdown(id="nipple_retraction-filter",
                                  options=[{'label': nr, 'value': nr } for nr in df['nipple_retraction'].unique()],
                                  value=df['nipple_retraction'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),
                    dbc.Col([html.Label("Симптом выделения соска", className="filter-label"), 
                        dcc.Dropdown(id="nipple_release-filter",
                                  options=[{'label': nrl, 'value': nrl } for nrl in df['nipple_release'].unique()],
                                  value=df['nipple_release'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4)
                        
                    ]),
                    dbc.Row([dbc.Col([html.Label("Наследственность", className="filter-label"), 
                        dcc.Dropdown(id="genetics-filter",
                                  options=[{'label': g, 'value': g } for g in df['genetics'].unique()],
                                  value=df['genetics'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=6),
                    dbc.Col([html.Label("Прием гормональных препаратов", className="filter-label"), 
                        dcc.Dropdown(id="hormonal_medications-filter",
                                  options=[{'label': hm, 'value': hm } for hm in df['hormonal_medications'].unique()],
                                  value=df['hormonal_medications'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=6)]),
                
                ]), id="collapse-an", is_open=False,
        ),
         dbc.Button(
            "Данные УЗИ",
            id="collapse-button-us",
            className="mb-3",
            color="secodary",
            n_clicks=0,
        ),
        dbc.Collapse(
            dbc.Card([
                html.H2("Данные УЗИ", className="h2-label"),
                dbc.Row([dbc.Col([html.Label("УЗ-контур", className="filter-label"), 
                             dcc.Dropdown(id="us_nodle_contour-filter",
                                  options=[{'label': us_c, 'value': us_c } for us_c in df['us_nodle_contour'].unique()],
                                  value=df['us_nodle_contour'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("УЗ-протоки", className="filter-label"), 
                             dcc.Dropdown(id="us_ducts-filter",
                                  options=[{'label': us_d, 'value': us_d } for us_d in df['us_ducts'].unique()],
                                  value=df['us_ducts'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("УЗ-фон", className="filter-label"), 
                             dcc.Dropdown(id="us_background-filter",
                                  options=[{'label': us_b, 'value': us_b } for us_b in df['us_background'].unique()],
                                  value=df['us_background'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4)]),
               dbc.Col([html.Label("Локализация", className="filter-label"), 
                             dcc.Dropdown(id="us_formation-filter",
                                  options=[{'label': us_l, 'value': us_l } for us_l in df['us_formation'].unique()],
                                  value=df['us_formation'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=12),
               dbc.Row([dbc.Col([html.Label("Форма", className="filter-label"), 
                             dcc.Dropdown(id="us_form-filter",
                                  options=[{'label': us_f, 'value': us_f } for us_f in df['us_form'].unique()],
                                  value=df['us_form'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("Размер", className="filter-label"), 
                             dcc.Dropdown(id="us_nodle_size-filter",
                                  options=[{'label': us_f, 'value': us_f } for us_f in df['us_nodle_size'].unique()],
                                  value=df['us_nodle_size'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("Эхогенность", className="filter-label"), 
                             dcc.Dropdown(id="us_echogenicity_formation-filter",
                                  options=[{'label': us_e, 'value': us_e } for us_e in df['us_echogenicity_formation'].unique()],
                                  value=df['us_echogenicity_formation'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4)]),
               dbc.Row([dbc.Col([html.Label("УЗ-структура", className="filter-label"), 
                             dcc.Dropdown(id="us_structure-filter",
                                  options=[{'label': us_str, 'value': us_str } for us_str in df['us_structure'].unique()],
                                  value=df['us_structure'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("УЗ-кровоток", className="filter-label"), 
                             dcc.Dropdown(id="us_formation_blood_flow-filter",
                                  options=[{'label': us_bf, 'value': us_bf } for us_bf in df['us_formation_blood_flow'].unique()],
                                  value=df['us_formation_blood_flow'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("Эластография", className="filter-label"), 
                             dcc.Dropdown(id="us_elastography-filter",
                                  options=[{'label': us_el, 'value': us_el } for us_el in df['us_elastography'].unique()],
                                  value=df['us_elastography'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4)]),
               dbc.Row([dbc.Col([html.Label("Регионарные лимфоузлы", className="filter-label"), 
                             dcc.Dropdown(id="us_region_lymph_nodes-filter",
                                  options=[{'label': us_lymph, 'value': us_lymph } for us_lymph in df['us_region_lymph_nodes'].unique()],
                                  value=df['us_region_lymph_nodes'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("Количество узлов", className="filter-label"), 
                             dcc.Dropdown(id="us_number_nodles-filter",
                                  options=[{'label': us_n, 'value': us_n } for us_n in df['us_number_nodles'].unique()],
                                  value=df['us_number_nodles'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("Категория BIRADS", className="filter-label"), 
                             dcc.Dropdown(id="us_category_birads-filter",
                                  options=[{'label': us_cat, 'value': us_cat } for us_cat in df['us_category_birads'].unique()],
                                  value=df['us_category_birads'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4)]),
               dbc.Col([html.Label("Определение микрокальцинатов", className="filter-label"), 
                             dcc.Dropdown(id="us_calcinates_micro_pure-filter",
                                  options=[{'label': us_cat, 'value': us_cat } for us_cat in df['us_calcinates_micro_pure'].unique()],
                                  value=df['us_calcinates_micro_pure'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=12)
                
                                  ]
                ), id="collapse-us",
            is_open=False,
        ),
         dbc.Button(
            "Данные ММГ",
            id="collapse-button-mmg",
            className="mb-3",
            color="secodary",
            n_clicks=0,
        ),
        dbc.Collapse(
            dbc.Card([
                         html.H2("Данные ММГ", className="h2-label"),
          dbc.Col([html.Label("ММГ-фон", className="filter-label"), 
                             dcc.Dropdown(id="mmg_background_breast-filter",
                                  options=[{'label': mmg_b, 'value': mmg_b } for mmg_b in df['mmg_background_breast'].unique()],
                                  value=df['mmg_background_breast'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=12),
          dbc.Row([dbc.Col([html.Label("Качество узла", className="filter-label"), 
                             dcc.Dropdown(id="mmg_nodle-filter",
                                  options=[{'label': mmg_b, 'value': mmg_b } for mmg_b in df['mmg_nodle'].unique()],
                                  value=df['mmg_nodle'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),
          dbc.Col([html.Label("Контур узла", className="filter-label"), 
                             dcc.Dropdown(id="mmg_nodle_contour-filter",
                                  options=[{'label': mmg_nc, 'value': mmg_nc } for mmg_nc in df['mmg_nodle_contour'].unique()],
                                  value=df['mmg_nodle_contour'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6)]),
          dbc.Row([dbc.Col([html.Label("Размер узла", className="filter-label"), 
                             dcc.Dropdown(id="mmg_nodle_size-filter",
                                  options=[{'label': mmg_ns, 'value': mmg_ns } for mmg_ns in df['mmg_nodle_size'].unique()],
                                  value=df['mmg_nodle_size'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),
          dbc.Col([html.Label("Кальцификаты", className="filter-label"), 
                             dcc.Dropdown(id="mmg_calcifications-filter",
                                  options=[{'label': mmg_cal, 'value': mmg_cal } for mmg_cal in df['mmg_calcifications'].unique()],
                                  value=df['mmg_calcifications'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6)]),
          dbc.Row([dbc.Col([html.Label("Визуализируемые образования", className="filter-label"), 
                             dcc.Dropdown(id="mmg_number_formations_visualized-filter",
                                  options=[{'label': mmg_cal, 'value': mmg_cal } for mmg_cal in df['mmg_number_formations_visualized'].unique()],
                                  value=df['mmg_number_formations_visualized'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),
          dbc.Col([html.Label("Подмышечные лимфоузлы", className="filter-label"), 
                             dcc.Dropdown(id="mmg_axillary_lymph_nodes-filter",
                                  options=[{'label': mmg_cal, 'value': mmg_cal } for mmg_cal in df['mmg_axillary_lymph_nodes'].unique()],
                                  value=df['mmg_axillary_lymph_nodes'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6)]),
          dbc.Row([dbc.Col([html.Label("Тип структуры ACR", className="filter-label"), 
                             dcc.Dropdown(id="type_structure_acr-filter",
                                  options=[{'label': mmg_cal, 'value': mmg_cal } for mmg_cal in df['type_structure_acr'].unique()],
                                  value=df['type_structure_acr'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),
          dbc.Col([html.Label("Категория BIRADS", className="filter-label"), 
                             dcc.Dropdown(id="mmg_category_birads-filter",
                                  options=[{'label': mmg_cal, 'value': mmg_cal } for mmg_cal in df['mmg_category_birads'].unique()],
                                  value=df['mmg_category_birads'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6)])

                
                                  ]
                ), id="collapse-mmg",
            is_open=False,
        ),
        dbc.Button(
            "Данные 3d УЗИ",
            id="collapse-button-abus",
            className="mb-3",
            color="secodary",
            n_clicks=0,
        ),
        dbc.Collapse(
            dbc.Card([
               html.H2("Данные 3D УЗИ", className="h2-label"),
               dbc.Row([
                dbc.Col([html.Label("Размер узлов", className="filter-label"), 
                             dcc.Dropdown(id="abus_nodle_size-filter",
                                  options=[{'label': ab_ns, 'value': ab_ns } for ab_ns in df['abus_nodle_size'].unique()],
                                  value=df['abus_nodle_size'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("Контур узлов", className="filter-label"), 
                             dcc.Dropdown(id="abus_nodle_contours-filter",
                                  options=[{'label': ab_nc, 'value': ab_nc } for ab_nc in df['abus_nodle_contours'].unique()],
                                  value=df['abus_nodle_contours'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("Эхогенность", className="filter-label"), 
                             dcc.Dropdown(id="abus_echogenicity_formation-filter",
                                  options=[{'label': ab_ef, 'value': ab_ef } for ab_ef in df['abus_echogenicity_formation'].unique()],
                                  value=df['abus_echogenicity_formation'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("Структура", className="filter-label"), 
                             dcc.Dropdown(id="abus_structure-filter",
                                  options=[{'label': ab_s, 'value': ab_s } for ab_s in df['abus_structure'].unique()],
                                  value=df['abus_structure'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=12),
               
               dbc.Col([html.Label("Форма", className="filter-label"), 
                             dcc.Dropdown(id="abus_formation-filter",
                                  options=[{'label': ab_f, 'value': ab_f } for ab_f in df['abus_formation'].unique()],
                                  value=df['abus_formation'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=12),
               dbc.Col([html.Label("Симптом ретаркции", className="filter-label"), 
                             dcc.Dropdown(id="abus_symptom_retraction-filter",
                                  options=[{'label': ab_sr, 'value': ab_sr } for ab_sr in df['abus_symptom_retraction'].unique()],
                                  value=df['abus_symptom_retraction'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("Категория BIRADS", className="filter-label"), 
                             dcc.Dropdown(id="abus_category_birads-filter",
                                  options=[{'label': ab_f, 'value': ab_f } for ab_f in df['abus_category_birads'].unique()],
                                  value=df['abus_category_birads'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4),
               dbc.Col([html.Label("УЗ кальцинаты", className="filter-label"), 
                             dcc.Dropdown(id="abus_calcinates-filter",
                                  options=[{'label': ab_f, 'value': ab_f } for ab_f in df['abus_calcinates'].unique()],
                                  value=df['abus_calcinates'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=4)])

                
                                  ]
                ), id="collapse-abus",
            is_open=False,
        ),
        dbc.Button(
            "Данные гистологии",
            id="collapse-button-hist",
            className="mb-3",
            color="secodary",
            n_clicks=0,
        ),
        dbc.Collapse(
            dbc.Card([
               html.H2("Данные гистологии", className="h2-label"),
               dbc.Row([
               dbc.Col([html.Label("Морфология", className="filter-label"), 
                             dcc.Dropdown(id="tumor_morphology_structure-filter",
                                  options=[{'label': morph, 'value': morph } for morph in df['tumor_morphology_structure'].unique()],
                                  value=df['tumor_morphology_structure'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=12),
            
               dbc.Col([html.Label("Заключение цитологии", className="filter-label"), 
                             dcc.Dropdown(id="cytological_conclusion-filter",
                                  options=[{'label': cyt, 'value': cyt } for cyt in df['cytological_conclusion'].unique()],
                                  value=df['cytological_conclusion'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),

            

   
               dbc.Col([html.Label("Уровень малигнизации", className="filter-label"), 
                             dcc.Dropdown(id="degree_malignancy-filter",
                                  options=[{'label': cyt, 'value': cyt } for cyt in df['degree_malignancy'].unique()],
                                  value=df['degree_malignancy'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),
               dbc.Col([html.Label("Мутация BRCA", className="filter-label"), 
                             dcc.Dropdown(id="mutation_brca-filter",
                                  options=[{'label': cyt, 'value': cyt } for cyt in df['mutation_brca'].unique()],
                                  value=df['mutation_brca'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),
               
               dbc.Col([html.Label("Рецепторы опухоли", className="filter-label"), 
                             dcc.Dropdown(id="tumor_receptors-filter",
                                  options=[{'label': cyt, 'value': cyt } for cyt in df['tumor_receptors'].unique()],
                                  value=df['tumor_receptors'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),
               dbc.Col([    html.Label("Подверждение ЗНО", className="filter-label"), 
                             dcc.Dropdown(id="hist_is_tumor-filter",
                                  options=[{'label': t, 'value': t } for t in df['hist_is_tumor'].unique()],
                                  value=df['hist_is_tumor'].unique(),
                                  multi=True, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=12)]),
                

                
                                  ]
                ), id="collapse-hist",
            is_open=False,
        ),
        dbc.Button(
            "Вероятность",
            id="collapse-button-prob",
            className="mb-3",
            color="secodary",
            n_clicks=0,
        ),
        dbc.Collapse(
            dbc.Card([
               html.H2("Вероятность", className="h2-label"),
               dbc.Row([
                   html.Label("Обнаружения кальцинатов по УЗИ", className="filter-label"), 
                   dbc.Col([   
                   dcc.Input(id="us_probabilityCalc-filter",
                             min = 0,
                             max = 1.00,
                             step=0.01,
                             value=0,
                                  type = "number",
                                  className="filter-label",
                                  style=st.DROPDOWN_STYLE,
                                  )   
                       ], md=6)]),
                dbc.Row([
                   html.Label("Обнаружения кальцинатов по 3d УЗИ", className="filter-label"), 
                   dbc.Col([   
                   dcc.Input(id="abus_probabilityCalc-filter",
                             min = 0,
                             max = 1.00,
                             step=0.01,
                             value=0,
                                  type = "number",
                                  className="filter-label",
                                  style=st.DROPDOWN_STYLE,
                                  )   
                       ], md=6)]),
                dbc.Row([
                   html.Label("Обнаружения ЗНО по УЗИ", className="filter-label"), 
                   dbc.Col([   
                   dcc.Input(id="us_probabilityNeoCa-filter",
                             min = 0,
                             max = 1.00,
                             step=0.01,
                             value=0,
                                  type = "number",
                                  className="filter-label",
                                  style=st.DROPDOWN_STYLE,
                                  )   
                       ], md=6)]),
                dbc.Row([
                   html.Label("Обнаружения ЗНО по 3d УЗИ", className="filter-label"), 
                   dbc.Col([   
                   dcc.Input(id="abus_probabilityNeoCa-filter",
                             min = 0,
                             max = 1.00,
                             step=0.01,
                             value=0,
                                  type = "number",
                                  className="filter-label",
                                  style=st.DROPDOWN_STYLE,
                                  )   
                       ], md=6)]),
                dbc.Row([
                   html.Label("Обнаружения ЗНО по ММГ", className="filter-label"), 
                   dbc.Col([   
                   dcc.Input(id="mmg_probabilityNeoCa-filter",
                             min = 0,
                             max = 1.00,
                             step=0.01,
                             value=0,
                                  type = "number",
                                  className="filter-label",
                                  style=st.DROPDOWN_STYLE,
                                  )   
                       ], md=6)
                       ]),
                

                
                                  ]
                ), id="collapse-prob",
            is_open=False,
        ),
        dbc.Button(
            "Предсказание - ДО 40 ЛЕТ",
            id="collapse-button-pred",
            className="mb-3",
            color="secodary",
            n_clicks=0,
        ),
        dbc.Collapse(
                dbc.Card([
                    html.H2("Данные анамнеза", className="h2-label"),
                    html.Label("Возраст", className="filter-label"), 
                   dbc.Col([   
                   dcc.Input(id="age_patient_pr_jun-filter",
                             min = 18,
                             max = 39,
                             step=1,
                             value=0,
                                  type = "number",
                                  className="filter-label",
                                  style=st.DROPDOWN_STYLE,
                                  )   
                       ], md=6),
                    dbc.Col([html.Label("Первичный диагноз", className="filter-label"), 
                        dcc.Dropdown(id="diagnosis_primary_pr_jun-filter",
                                  options=[{'label': dp, 'value': dp } for dp in df_us_jn['diagnosis_primary'].unique()],
                                  value=df_us_jn['diagnosis_primary'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=12),
                    dbc.Col([html.Label("Сторона", className="filter-label"), 
                        dcc.Dropdown(id="side_pr_jun-filter",
                                  options=[{'label': s, 'value': s } for s in df_us_jn['side'].unique()],
                                  value=df_us_jn['side'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=12),
                    dbc.Col([html.Label("Репродуктивный статус", className="filter-label"), 
                        dcc.Dropdown(id="satus_reproductive_pr_jun-filter",
                                  options=[{'label': sr, 'value': sr } for sr in df_us_jn['satus_reproductive'].unique()],
                                  value=df_us_jn['satus_reproductive'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=12),
                    dbc.Row([dbc.Col([html.Label("Жалобы", className="filter-label"), 
                        dcc.Dropdown(id="complaints_pr_jun-filter",
                                  options=[{'label': cmpl, 'value': cmpl } for cmpl in df_us_jn['complaints'].unique()],
                                  value=df_us_jn['complaints'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),
                    dbc.Col([html.Label("Симптомы на коже", className="filter-label"), 
                        dcc.Dropdown(id="skin_symptoms_pr_jun-filter",
                                  options=[{'label': sks, 'value': sks } for sks in df_us_jn['skin_symptoms'].unique()],
                                  value=df_us_jn['skin_symptoms'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),

                                  ]),
                    dbc.Row([
                        dbc.Col([html.Label("Операции ранее", className="filter-label"), 
                        dcc.Dropdown(id="breast_surgery_before_pr_jun-filter",
                                  options=[{'label': bsb, 'value': bsb } for bsb in df_us_jn['breast_surgery_before'].unique()],
                                  value=df_us_jn['breast_surgery_before'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),
                    
                    dbc.Col([html.Label("Симптом ретракции", className="filter-label"), 
                        dcc.Dropdown(id="nipple_retraction_pr_jun-filter",
                                  options=[{'label': nr, 'value': nr } for nr in df_us_jn['nipple_retraction'].unique()],
                                  value=df_us_jn['nipple_retraction'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),
                    dbc.Col([html.Label("Симптом выделения соска", className="filter-label"), 
                        dcc.Dropdown(id="nipple_release_pr_jun-filter",
                                  options=[{'label': nrl, 'value': nrl } for nrl in df_us_jn['nipple_release'].unique()],
                                  value=df_us_jn['nipple_release'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4)
                        
                    ]),
                    dbc.Col([html.Label("Квадрант", className="filter-label"), 
                        dcc.Dropdown(id="quadrant_pr_jun-filter",
                                  options=[{'label': hm, 'value': hm } for hm in df_us_jn['quadrant'].unique()],
                                  value=df_us_jn['quadrant'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=12),
                    dbc.Row([dbc.Col([html.Label("Наследственность", className="filter-label"), 
                        dcc.Dropdown(id="genetics_pr_jun-filter",
                                  options=[{'label': g, 'value': g } for g in df_us_jn['genetics'].unique()],
                                  value=df_us_jn['genetics'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=6),
                    dbc.Col([html.Label("Прием гормональных препаратов", className="filter-label"), 
                        dcc.Dropdown(id="hormonal_medications_pr_jun-filter",
                                  options=[{'label': hm, 'value': hm } for hm in df_us_jn['hormonal_medications'].unique()],
                                  value=df_us_jn['hormonal_medications'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=6)]),
                
                ]), id="collapse-pred", is_open=False,
        ),
        dbc.Button(
            "Предсказание - 40 ЛЕТ И СТАРШЕ",
            id="collapse-button-pred1",
            className="mb-3",
            color="secodary",
            n_clicks=0,
        ),
        dbc.Collapse(
                [dbc.Card([
                    html.H2("Данные анамнеза", className="h2-label"),
                    html.Label("Возраст", className="filter-label"), 
                   dbc.Col([   
                   dcc.Input(id="age_patient_pr_snr-filter",
                             min = 40,
                             max = 90,
                             step=1,
                             value=0,
                                  type = "number",
                                  className="filter-label",
                                  style=st.DROPDOWN_STYLE,
                                  )   
                       ], md=6),
                    dbc.Col([html.Label("Первичный диагноз", className="filter-label"), 
                        dcc.Dropdown(id="diagnosis_primary_pr_snr-filter",
                                  options=[{'label': dp, 'value': dp } for dp in df_us_snr['diagnosis_primary'].unique()],
                                  value=df_us_snr['diagnosis_primary'].unique()[1],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=6),
                    dbc.Col([html.Label("Сторона", className="filter-label"), 
                        dcc.Dropdown(id="side_pr_snr-filter",
                                  options=[{'label': dp, 'value': dp } for dp in df_us_snr['side'].unique()],
                                  value=df_us_snr['side'].unique()[1],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=6),
                    dbc.Col([html.Label("Репродуктивный статус", className="filter-label"), 
                        dcc.Dropdown(id="satus_reproductive_pr_snr-filter",
                                  options=[{'label': sr, 'value': sr } for sr in df_us_snr['satus_reproductive'].unique()],
                                  value=df_us_snr['satus_reproductive'].unique()[1],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=12),
                    dbc.Row([dbc.Col([html.Label("Жалобы", className="filter-label"), 
                        dcc.Dropdown(id="complaints_pr_snr-filter",
                                  options=[{'label': cmpl, 'value': cmpl } for cmpl in df_us_snr['complaints'].unique()],
                                  value=df_us_snr['complaints'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),
                    dbc.Col([html.Label("Симптомы на коже", className="filter-label"), 
                        dcc.Dropdown(id="skin_symptoms_pr_snr-filter",
                                  options=[{'label': sks, 'value': sks } for sks in df_us_snr['skin_symptoms'].unique()],
                                  value=df_us_snr['skin_symptoms'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),

                                  ]),
                    dbc.Row([
                        dbc.Col([html.Label("Операции ранее", className="filter-label"), 
                        dcc.Dropdown(id="breast_surgery_before_pr_snr-filter",
                                  options=[{'label': bsb, 'value': bsb } for bsb in df_us_snr['breast_surgery_before'].unique()],
                                  value=df_us_snr['breast_surgery_before'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),
                    
                    dbc.Col([html.Label("Симптом ретракции", className="filter-label"), 
                        dcc.Dropdown(id="nipple_retraction_pr_snr-filter",
                                  options=[{'label': nr, 'value': nr } for nr in df_us_snr['nipple_retraction'].unique()],
                                  value=df_us_snr['nipple_retraction'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4),
                    dbc.Col([html.Label("Симптом выделения соска", className="filter-label"), 
                        dcc.Dropdown(id="nipple_release_pr_snr-filter",
                                  options=[{'label': nrl, 'value': nrl } for nrl in df_us_snr['nipple_release'].unique()],
                                  value=df_us_snr['nipple_release'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=4)
                        
                    ]),
                    dbc.Col([html.Label("Квадрант", className="filter-label"), 
                        dcc.Dropdown(id="quadrant_pr_snr-filter",
                                  options=[{'label': nrl, 'value': nrl } for nrl in df_us_snr['quadrant'].unique()],
                                  value=df_us_snr['quadrant'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=6),
                    dbc.Row([dbc.Col([html.Label("Наследственность", className="filter-label"), 
                        dcc.Dropdown(id="genetics_pr_snr-filter",
                                  options=[{'label': g, 'value': g } for g in df_us_snr['genetics'].unique()],
                                  value=df_us_snr['genetics'].unique()[1],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=6),
                    dbc.Col([html.Label("Прием гормональных препаратов", className="filter-label"), 
                        dcc.Dropdown(id="hormonal_medications_pr_snr-filter",
                                  options=[{'label': hm, 'value': hm } for hm in df_us_snr['hormonal_medications'].unique()],
                                  value=df_us_snr['hormonal_medications'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )], md=6)]),
                
                ]),
                dbc.Card([
                         html.H2("Данные ММГ", className="h2-label"),
                         dbc.Col([html.Label("ММГ кожа", className="filter-label"), 
                             dcc.Dropdown(id="mmg_conclusion_skin_snr-filter",
                                  options=[{'label': mmg_sk, 'value': mmg_sk } for mmg_sk in df_us_snr['mmg_conclusion_skin'].unique()],
                                  value=df_us_snr['mmg_conclusion_skin'].unique()[3],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=12),
                       dbc.Col([html.Label("ММГ ареола", className="filter-label"), 
                             dcc.Dropdown(id="mmg_areola_pr_snr-filter",
                                  options=[{'label': mmg_ar, 'value': mmg_ar } for mmg_ar in df_us_snr['mmg_areola'].unique()],
                                  value=df_us_snr['mmg_areola'].unique()[3],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=12),
                       dbc.Col([html.Label("ММГ сосок", className="filter-label"), 
                             dcc.Dropdown(id="mmg_nipple_pr_snr-filter",
                                  options=[{'label': mmg_n, 'value': mmg_n } for mmg_n in df_us_snr['mmg_nipple'].unique()],
                                  value=df_us_snr['mmg_nipple'].unique()[3],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=12),
          dbc.Col([html.Label("ММГ-фон", className="filter-label"), 
                             dcc.Dropdown(id="mmg_background_breast_pr_snr-filter",
                                  options=[{'label': mmg_b, 'value': mmg_b } for mmg_b in df_us_snr['mmg_background_breast'].unique()],
                                  value=df_us_snr['mmg_background_breast'].unique()[3],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=12),
          dbc.Row([dbc.Col([html.Label("Качество узла", className="filter-label"), 
                             dcc.Dropdown(id="mmg_nodle_pr_snr-filter",
                                  options=[{'label': mmg_b, 'value': mmg_b } for mmg_b in df_us_snr['mmg_nodle'].unique()],
                                  value=df_us_snr['mmg_nodle'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),
          dbc.Col([html.Label("Контур узла", className="filter-label"), 
                             dcc.Dropdown(id="mmg_nodle_contour_pr_snr-filter",
                                  options=[{'label': mmg_nc, 'value': mmg_nc } for mmg_nc in df_us_snr['mmg_nodle_contour'].unique()],
                                  value=df_us_snr['mmg_nodle_contour'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6)]),
          dbc.Row([dbc.Col([html.Label("Размер узла", className="filter-label"), 
                             dcc.Dropdown(id="mmg_nodle_size_pr_snr-filter",
                                  options=[{'label': mmg_ns, 'value': mmg_ns } for mmg_ns in df_us_snr['mmg_nodle_size'].unique()],
                                  value=df_us_snr['mmg_nodle_size'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),
          dbc.Col([html.Label("Кальцификаты", className="filter-label"), 
                             dcc.Dropdown(id="mmg_calcifications_pr_snr-filter",
                                  options=[{'label': mmg_cal, 'value': mmg_cal } for mmg_cal in df_us_snr['mmg_calcifications'].unique()],
                                  value=df_us_snr['mmg_calcifications'].unique()[2],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6)]),
          dbc.Row([dbc.Col([html.Label("Визуализируемые образования", className="filter-label"), 
                             dcc.Dropdown(id="mmg_number_formations_visualized_pr_snr-filter",
                                  options=[{'label': mmg_cal, 'value': mmg_cal } for mmg_cal in df_us_snr['mmg_number_formations_visualized'].unique()],
                                  value=df_us_snr['mmg_number_formations_visualized'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),
          dbc.Col([html.Label("Подмышечные лимфоузлы", className="filter-label"), 
                             dcc.Dropdown(id="mmg_axillary_lymph_nodes_pr_snr-filter",
                                  options=[{'label': mmg_cal, 'value': mmg_cal } for mmg_cal in df_us_snr['mmg_axillary_lymph_nodes'].unique()],
                                  value=df_us_snr['mmg_axillary_lymph_nodes'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6)]),
                       dbc.Col([html.Label("ММГ заключение", className="filter-label"), 
                             dcc.Dropdown(id="mmg_conclusion_pr_snr-filter",
                                  options=[{'label': mmg_cal, 'value': mmg_cal } for mmg_cal in df_us_snr['mmg_conclusion'].unique()],
                                  value=df_us_snr['mmg_conclusion'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6)]),
          dbc.Row([dbc.Col([html.Label("Тип структуры ACR", className="filter-label"), 
                             dcc.Dropdown(id="type_structure_acr_pr_snr-filter",
                                  options=[{'label': mmg_cal, 'value': mmg_cal } for mmg_cal in df_us_snr['type_structure_acr'].unique()],
                                  value=df_us_snr['type_structure_acr'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),
                       dbc.Row([dbc.Col([html.Label("Количество узлов", className="filter-label"), 
                             dcc.Dropdown(id="mmg_number_nodles_pr_snr-filter",
                                  options=[{'label': mmg_cal, 'value': mmg_cal } for mmg_cal in df_us_snr['mmg_number_nodles'].unique()],
                                  value=df_us_snr['mmg_number_nodles'].unique()[0],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  )  
                       ], md=6),
          dbc.Col([html.Label("Категория BIRADS", className="filter-label"), 
                    dcc.Dropdown(id="mmg_category_birads_pr_snr-filter",
                                  options=[{'label': mmg_cal, 'value': mmg_cal } for mmg_cal in df_us_snr['mmg_category_birads'].unique()],
                                  value=df_us_snr['mmg_category_birads'].unique()[6],
                                  multi=False, 
                                  className="filter-dropdown",
                                  style=st.DROPDOWN_STYLE,
                                  ),
                       ], md=6)])

                
                                  ]
                )],
                 
                 
                  id="collapse-pred1", is_open=False,
        ),
    
        




        ]),
        
        html.H2("Визуализация данных:", className="h2-label"),
        dbc.Tabs(
            [
                dbc.Tab(label="Данные анамнеза", tab_id="anamnesis"),
                dbc.Tab(label="Данные УЗИ", tab_id="us_data"),
                dbc.Tab(label="Данные ММГ", tab_id="mmg_data"),
                dbc.Tab(label="Данные 3D УЗИ", tab_id="abus_data"),
                dbc.Tab(label="Данные гистологии", tab_id="hist_data"),
                dbc.Tab(label="Вероятность", tab_id="prob_data"),
                dbc.Tab(label="Предсказание", tab_id="pred_data")
            ],
            id="tabs",
            active_tab="anamnesis",
        ),

        dbc.Spinner(
            [
                dcc.Store(id="store"),
                html.Div(id="tab-content", className="p-4"),
            ],
            delay_show=100,
        ),
    ]
)